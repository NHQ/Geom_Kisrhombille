Kisrhombille Coordinate System, Nesting Kisrhombille Grid Geometry and Forsythia Fractal
------------------------------------------------

Kisrhombille Coordinate System



A KGrid is a coordinate system.<br> 
It is based on a kisrhombille tesselation.<br>
#### This is a kisrhombille tesselation.

![](kisrhombilletesselation.png)

A kisrhombille tesselation is a hexagon grid with each hexagon split up into 12 triangles.
The triangles are like this.

![](kistriangle.png)

The lengths of the sides are **1, √3, 2** ( aka *fish, goat and hawk*, respectively ).<br>
The angles are **π/2, π/3, π/6**.<br>
The number of connections at each vertex is **4, 6, 12**.

#### A KGrid addresses the kisrhombille tesselation vertices.

The black dots are the vertices.

![](kiswithhighlightedvertices.png)

To address the vertices we first address the hexagons.<br>
To do that we use a 3-integer address :<br> 
** ( ant, bat, cat ) ** <br>

![](hexgridwithcoorsandarrows.png)

In the kisrhombille tesselation each hexagon is like a clock face. 1 center vertex and 12 edge vertices. 13 vertices total. Let's call it a **hexclock**.

![](clock.png)

We address 6 vertices within each hexclock.<br>
We do it using another integer-address : **dog**.<br>
We address the vertices in each hexclock in a way that does not interfere with its neighboring hexclocks.

![](kgriddetailedlocaladdresses.png)

Therefor a vertex in the KGrid is addressed : **( ant, bat, cat, dog )**.<br>
**Ant, bat and cat** are any integer (tho some combinations of integer values are invalid).<br>
**Dog** is an integer in range [0,5].

![](kisgridcoors.png)

#### Definition of a KGrid in the plane.

A KGrid is defined with 4 objects.

**ORIGIN** A point on the plane. The location of KVertex(0,0,0,0).<br>
![](origin.png)

**FORWARD** Aka *north*. A direction. A floating point value in range [0,2π].<br>
![](forward.png)

**FISH** : The unit interval of the kisrhombille system. The shortest side in our unit triangle. The other sides are of length ** Fish x √3** and **Fish x 2**.

![](kistrianglefish.png)

**TWIST** : The direction in which we address vertices about the hexclock edge. The direction of positive index. Counterclockwise or clockwise.

![](kis%20twist%20mirror.png)

#### Advantages of KGrid geometry.

The geometry delivers much graphical power without getting too crazy complex in the implementation.

We have 6 axes. That's a lot of design freedom.

It's smooth scaling. That is to say we can describe the same form at arbitrary resolution, just like with squaregrid and trianglegrid. (TODO need an illustration here)  

Our angles and proportions are constrained. It makes for a unified graphic design. It looks good.

We can have equilateral triangles and rectanguloids in the same system, which is useful.

#### Code

** [Geom_Kisrhombille](https://github.com/johnalexandergreene/geom_Kisrhombille) **



  

Nesting

  define a kgrid

  

Forsythia Fractal

  general geometry

  

  achieving symmetry


